[ { "title": "OWASP TOP-10", "url": "/blog/posts/owasp-top-10/", "categories": "OWASP, INTERVIEW", "tags": "owasp, interview", "date": "2022-03-28 10:50:00 +0530", "snippet": "What is OWASP?The OWASP Open Web Application Security Project is a nonprofit foundation that works to improve the security of software. OWASP regularly update it’s list after certain yeras.. There are total 10 most common web applications vulnerability which are listed in owasp top 10.It was first updated in 2013 and then 2017 and the latest release is 2021 which we are using now. The OWASP Foundation is the source for developers and technologists to secure the web. OWASP1. Broken Access ControlBroken acess control is flaw in web application which is occur due to ` poor implementation of access control mechanism that can be easily exploited.This flaw allow attacker/unauthorised user to access the contents that they are not allowed to view, can perform unauthorised functions, even an attacker can delete the content, or take over site administration.Remediation Proper implementations of access control to the `users. Delete any inactive or unnecessary accounts. Shutdown unnecessary service and access point. Use multi-factor authentication at all access points Disable web server directory listing2. Cryptographic FailuresThis flaw previously was known as sensitive data exposures and it arises when web application send any data in plain text, use outdated and insecure cryptographic algorithms , or weak crypto keys etc are called cryptographic failures. General idea:This security threats occurs when web applications does not adequately protect sensitive information like credit cared numbere, password, banking information, social security number, or any similar crucial data whose leak can be critical for the user. This flaw in in web applications can cause financial loss, access to victims accounts, blackmailing and ultimately decrease the trust in to brands.Remediation Encrypt data while it is in transit and at rest. Use the most up-to-date encryption techniques. Turn off autocomplete on forms. Reduce/minimize the size of the data surface area. Use Strong adaptive and salted hashing functions when saving passwords.3. InjectionAn injection attack refers to untrusted data by an application that forces it to execute commands. Such data or malicious code is inserted by an attacker and can compromise data or the whole application.The most common injection attacks are SQL injections , cross-site scripting (XSS), HTML injections, command injections, CCS injection, etc..Remediation Separate the commands from data. Data supplied by users most be validated, filtered, or sanitized. Use of a safe API that avoids the use of the interpreter altogether or uses parameterized queries4. Insecure DesignThis category of vulnerabilities is focused on the risks associated with flaws in design and architecture.Remediation Development lifecycle with AppSec professionals Limit user and service resource consumption. Implement threat modeling for crucial authentication, access control, business logic, secure design patterns and key flows.5. Security MisconfigurationSecurity misconfiguration is flaw in web applications and generally arises due to Default configurations, open ports, privileges, incorrect HTTP headers etc.Remediation Improving security level of potentials flaw application. Properly configured permissions. Default accounts/passwords are enabled or unchanged Error messages should not display to users contain sensitive information The latest security features should be enabled. The server, framework, libraries, or databases, security settings must set to secure values Remove the unnecessary features, such as ports, services, pages , accounts, or privileges are allowed or installed6. Vulnerable and Outdated ComponentsThis category was previously known as “Using Components with Known Vulnerabilities.” Componentvulnerabilities can arise in when software is vulnerable, unsupported, or out of date, or not upgraded platform, framework, and dependencies when patches come out.Remediation Be aware of versions of client-side and server-side components used. Perform vulnerability Assessments to reduces attack. Upgrade platform, framework, and other dependencies.7. Identification and Authentication FailuresThis is the vulnerability exists in the web application when web application does not properly functions related to identifications and authentications, like sessions management, password recovery, other login credentials.Because of this attacker are able to compromise password, security keys, or sessions tokens or assume to identities and permissions of other user.Remediation Implement multi-factor authentication Do not deploy with default credentials, especially for users with admin privileges. Enforce strong passwords. Carefully monitor failed login attempts. Use a secure session manager that generates random, time-limited session IDs. Never include session IDs in URLs.8. Software and Data Integrity FailuresThis is new category on the OWASP list relates to vulnerabilities in software updates, critical data, and CI/CD pipelines whose integrity is not verified. Code and infrastructure that do not guard against integrity violations are referred to as software and data integrity failures For example, an application that relies on plugins, libraries, or modules from unverified and untrusted sources, repositories, or content delivery networks (CDNs) may be exposed to such a type of failure.Remediation Use digital signatures, or other similar measures To protect the integrity of the code going through the build and deploy processes, make sure your CI/CD pipeline includes adequate segregation, configuration, and access control. Verify that unsigned or unencrypted serialised data is not delivered to untrustworthy clients without integrity check or digital signature to detect alteration or replay.9. Security Logging and Monitoring FailuresIt is one of the important vulnerability among OWASP Top 10 and previously known as Insufficient Logging and Monitoring . This flaw arises when organization do not have proper logging and monitoring tools to insure all logs, detect suspicious activities and unauthorized access attempts. And all the alert should be properly managed by the security professionals.Remediation Log all login, access control, and server-side input validations failures. Logs must be in easily readable format.10. Server-Side Request Forgery (SSRF)Server-side request forgery issues arise when a web application does not validate the user-supplied URL when fetching a remote resource.OrSSRF is a web security flaw that allows an attacker to force a server-side application to send HTTP requests to any domain the attacker choose.Remediation Implement input validation. Use Regular Expressions (RegEx). Only accept the intended IP address format (IPv4 or IPv6). Validate incoming Domain Names. I have collected information from multiple article and post and based on my knowledge, this post is written. For more study on OWASP TOP 10, Please refer the original post No Resources 1 Article 2 Article 3 Article 4 Article Happy Learning" } ]
